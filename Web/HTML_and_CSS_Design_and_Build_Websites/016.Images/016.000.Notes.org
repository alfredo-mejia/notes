#+title: Chapter 16: Images
#+author: Alfredo Mejia
#+options: num:nil html-postamble:nil
#+html_head: <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/bulma@1.0.4/css/bulma.min.css" /> <style>body {margin: 5%} h1,h2,h3,h4,h5,h6 {margin-top: 3%} .content ul:not(:first-child) {margin-top: 0.25em}}</style>

* Navigation                                                                                                                                                                                                          
| Nav   | Title                                  | Links                                   |
|-------+----------------------------------------+-----------------------------------------|
| Index | Notes Home                             | \vert [[file:../../../index.html][html]] \vert [[file:../../../index.org][org]] \vert [[https://github.com/alfredo-mejia/notes/tree/main][github]] \vert |
| Home  | HTML & CSS - Design and Build Websites | \vert [[file:../000.Home.html][html]] \vert [[file:../000.Home.org][org]] \vert [[https://github.com/alfredo-mejia/notes/tree/main/Web/HTML_and_CSS_Design_and_Build_Websites][github]] \vert |
| Prev  | Chapter 15: Layout                     | \vert [[file:../015.Layout/015.000.Notes.html][html]] \vert [[file:../015.Layout/015.000.Notes.org][org]] \vert [[https://github.com/alfredo-mejia/notes/tree/main/Web/HTML_and_CSS_Design_and_Build_Websites/015.Layout][github]] \vert |
| Next  | Chapter 17: HTML5 Layout               | \vert [[file:../017.HTML5_Layout/017.000.Notes.html][html]] \vert [[file:../017.HTML5_Layout/017.000.Notes.org][org]] \vert [[https://github.com/alfredo-mejia/notes/tree/main/Web/HTML_and_CSS_Design_and_Build_Websites/017.HTML5_Layout][github]] \vert |

* Notes

** Section 16.1: Controlling Sizes of Images in CSS
   - You can control the size of an image using the ~width~ and ~height~ properties in CSS (just like you can for any other box)
   - Specifying the size of the image can help the website leave space for the image while it loads to the website
   - Typically a website tends to use the same size of image (e.g. an e-commerce website will have a size to show products)
   - So now you can use CSS classes like "small-img", "medium-img", "large-img" and using CSS you specify the ~width~ and ~height~ for each class

** Section 16.2: Aligning Images Using CSS
   - Rather than using the ~<img>~ element's ~align~ attribute, web page authors are incrasingly using the ~float~ property to align images
   - You can add the ~float~ property inside the CSS classes used to set the size of the image (e.g. like in "small-img" or "medium-img")
   - Or you create new CSS classes such as "align-left" or "align-right" and using CSS you specify ~float~ and its value to align the images left or right of the page
   - It is common to add margin to the image when aligning to ensure text does not touch the images' edges
   - You then can use the CSS classes to specify size and alignment

** Section 16.3: Centering Images Using CSS
   - By default, images are inline elements and thus the images flow within the surrounding text
   - To center an image it should be turned into a block-level element using ~display: block~
   - Once it has been made to a block-level then there are two ways to horizontally center an image
   - One you can use the ~text-align: center~ on the containing element of the image
   - Or second on the image itself, you can set the left margin and right margin to ~auto~
   - You can create CSS classes to create any image to a block-level element and center it horizontally using the techniques discussed

** Section 16.4: Background Images
   - The ~background-image~ property allows you to place an image behind any HTML element (this could be the entire page or just part of the page)
   - By default a background image will repeat to fill the entire box
   - The path to the image follows the letters ~url~ and it is put inside parentheses and quotes
   - Background images often are the last thing on the page to load which may make a website seem slow to load especially if the file is large
   - The ~background-repeat~ property can have four values:
     - ~repeat~: background image is repeated both horizontally and vertically, this is the default way it is shown if the ~background-repeat~ property is not used
     - ~repeat-x~: image is repeated horizontally only
     - ~repeat-y~: image is repeated vertically only
     - ~no-repeat~: image is only shown once and ~background-attachment~ property specifies whether a background image should stay in one position or move as the user scrolls up and down the page
   - ~background-attachment~ has two values: ~fixed~ (image stays in the same position on the page) and ~scroll~ (background image moves up and down as the user scrolls up and down the page)
   - When an image is not being repeated, you can use the ~background-position~ property to specify where in the browser window the background image should be placed
   - ~background-position~ usually has a pair of values, the first represents the horizontal position and the second represents the vertical (e.g. ~left top~, ~left center~, ~left bottom~, ~center top~, ~right top~, etc.)
   - If you only specify one value, the second value will default to ~center~
   - You can also use a pair of pixels or percentages, these represent the distance from the top left corner of the browser window or containing box (e.g.the top left corner is equal to ~0% 0%~)
   - The ~background~ property acts like a shorthand for all of the other background properties including ~background-color~ property
   - Properties must be specified in the following order, but you can miss any value if you do not want to specify it
     1. ~background-color~
     2. ~background-image~
     3. ~background-repeat~
     4. ~background-attachment~
     5. ~background-position~
   - CSS3 also support the use of multiple background images by repeating the ~background~ shorthand

** Section 16.5: Images Rollovers & Sprites
   - Using CSS, it is possible to create a link or button that changes to a second styple when a user moves their mouse over it (known as a *rollover*) and a third style when they click on it
   - This is achieved by setting a background image for the link or button that has 3 different styles of the same button (but only allows enough space to show one of them at a time)
   - When the user moves their mouse over the element or clicks on it, the position of the background image is moved to show the relevant image
   - When a single image is used for several different parts of an interface, it is known as a *sprite*
   - You can add the logo and other interface elements, as well as buttons to the image
   - The advantage of using sprites is that the web browser only needs to request one image rather than many images, which can make the web page load faster
   - What does this mean? Basically it is saying to have one image with different styles (e.g. one image contains 3 different button styles) then as you change change state like click or hover, you move your background to showcase only one style or the other but at the end it is one image that has 3 styles and you are moving to showcase only one style
   - How useful is this now? I'm not sure but it seems like there are better ways now
   - You can use the ~background-position~ property to move the image to show the button in the correct state
   - E.g. when the user hovers then in CSS there is a rule for ~:hover~ that moves the image and shows a different button style and same goes for ~:active~ (when the user clicks on the link or button)

** Section 16.6: Contrast of Background Images
   - If you want to overlay text on a background image, the image must be low contrast in order for the text to be legible
   - Majority of photographs have high contrast and are not ideal for background images
   - Image editing applications have tools that allow you to manually adjust your images to have lower contrast
   - To overlay text on an image with high contrast, you can place a semi-transparent background color (or "screen") behind the text to improve legibility

** Section 16.7: CSS3 Gradients
   - A gradient can be added for the background of a box using the ~background-image~ property
   - The textbook doesn't really show us the syntax of what is used now because it is an older book
   - However, to use a gradient in CSS you need to specify two colors to show the gradient that is in between both colors
   - You can even specify the angle of the gradient or even different types of gradients (such as radial gradients)

** Section 16.8: Summary
   - You can sspecify the dimensions of images using CSS which is helpful when you use the same sized images on several pages of your site
   - Images can be aligned both horizontally and vertically using CSS
   - You can use a background image behind the box created by any element on a page
   - Background images can appear just once or be repeated across the background of the box
   - You can create image rollover effects by moving the background position of an image
   - To reduce the number of images your browswer has to load, you can create image sprites

** Section 16.9: Chapter Exercise Example
   - [[file:./016.009.Chapter_Exercise_Example/index.html][Here]] is the chapter exercise example
   
* Keywords
| Term                    | Definition                                                                                                                                                                           |
|-------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| ~background-image~      | [[https://developer.mozilla.org/en-US/docs/Web/CSS/background-image][(Mozilla Docs)]] This porperty sets one or more background images on an element                                                                                                        |
| ~background-position~   | [[https://developer.mozilla.org/en-US/docs/Web/CSS/background-position][(Mozilla Docs)]] This property sets the initial position for each background image, the position is relative to the position layer set by ~background-origin~                          |
| ~background-repeat~     | [[https://developer.mozilla.org/en-US/docs/Web/CSS/background-repeat][(Mozilla Docs)]] This property sets how background images are repeated, a background image can be repeated along the horizontal and vertical axes or not repeated all                  |
| ~background-attachment~ | [[https://developer.mozilla.org/en-US/docs/Web/CSS/background-attachment][(Mozilla Docs)]] This property sets whether a background image's position is fixed within the viewport or scrolls within its containing block                                          |
| Rollover                | A rollover is a visual effect / changed on an element on the page whenever the element's state changes or the user interacts with it                                                 |
| Sprite                  | A sprite or image sprite are collection of images that are combined into a single file that an HTML document can access and possily use only one image from the collection at a time |

* Questions
  - *Q*: Does ~background-attachment~ only apply to when ~background-image: no-repeat~?
         - No, ~background-attachment~ can apply to background images that are repeating
         - For example, whenever the image is repeating and you use ~background-attachment: fixed~ then the image will be fixed relative to the viewport or you can use ~scroll~ as well
         - ~background-attachment~ is independent of the value of ~background-image~ so it can apply the property at any value of ~background-image~
      
  - *Q*: Can you really have multiple background images?
         - Yes you can have multiple images as the background image
	 #+BEGIN_SRC CSS
	   background-image:
	      url("../../media/examples/star.png"),
              url("../../media/examples/lizard.png");
	 #+END_SRC
         - In the example above, which we got from Mozilla docs, you can see we added two images as the background image
	 - The background images are down on stacking context layers on top of each other
	 - The first layer specified is drawn as if it is closest to the user (on top of all other images)
	 
  - *Q*: How can you add gradients in CSS?
         - [[https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_images/Using_CSS_gradients][Mozilla Docs - Using CSS Gradients]]
	 - There are various types of gradients including:
	   - [[https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/linear-gradient][Linear Gradient (Mozilla Docs)]]
	   - [[https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/radial-gradient][Radial Gradient (Mozilla Docs)]]
	   - [[https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/conic-gradient][Conic Gradient (Mozilla Docs)]]
	   - [[https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/repeating-linear-gradient][Repeating Linear Gradient (Mozilla Docs)]]
	   - [[https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/repeating-radial-gradient][Repeating Radial Gradient (Mozilla Docs)]]
	   - [[https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/repeating-conic-gradient][Repeating Conic Gradient (Mozilla Docs)]]
	 - You can do various things with these types of gradients such as having the gradient in a horizontal or vertical direction, at an angle, blend gradients and more
	 - Here are some examples that have linear gradient in the horizontal direction and diagonal direction
	   #+BEGIN_SRC CSS
	     .horizontal-gradient {
                background: linear-gradient(to right, blue, pink);
             }

	     .diagonal-gradient {
                background: linear-gradient(to bottom right, blue, pink);
             }
	   #+END_SRC
	 - The syntax for the gradient functions can vary the most basic one is simply ~background: linear-gradient(color1, color2);~ and this creates a gradient in the vertical direction but there other syntaxs that allows to add more options
	   
  - *Q*: How can you size images dynamically?
         - [[https://stackoverflow.com/questions/4684304/how-can-i-resize-an-image-dynamically-with-css-as-the-browser-width-height-chang][Stackoverflow - Image Resizing Dynamically]]
	 - From the answer in the Stackoverflow I think the best way is to create a container like a ~div~ or a ~figure~ and set it to some width like ~50%~ or some other value
	 - Then you set the image to be ~width: 100%~ and ~height: auto~ so now as the ~figure~ or ~div~ changes in size as the window resizes so will the image change in size dynamically
	 - Another way to dynamically resize an image is to keep the ~figure~ as normal (by default take ~100%~ width) and then set the width of the image to be ~50%~ or some other value and then you set the height to be ~auto~
	 - [[file:./016.010.Questions/q4.html][Here]] is an example I created to resize the image dynamically by changing the width of the image by using some percentage and then setting the height to be auto
	 - You can always add a min and max width for the image so it won't grow too large or too small

* Summary
  - You can control the size of images using the ~width~ and ~height~ properties
  - Having classes for images  with a set ~width~ and ~height~ can add image consistency throughout your website
  - Also having classes to align images to the left or right using ~float~ can help the developer easily align images by adding the class
  - To center an image you add ~display: block~ and add the left and right margin to ~auto~ and this can be added to a class
  - ~background-image~ property allows you to place an image behind any HTML element
  - The background image repeats to fill in the entire box or you can use the ~background-repeat~ property to control the repitition of the background image
  - ~background-position~ can be used to specify where in the browswer window the background image should be placed when the image is not being repeated
  - You can use the ~background~ property as a shortcut to set various properties such as: ~background-color~, ~background-image~, ~background-repeat~, ~background-attachment~, and ~background-position~
  - You can also use a rollover which is when you change the style of a link or button based on some state so you have different styles for different states / actions
  - A sprite is when you use /one/ image that contains all the styles for several different parts of an interface (e.g. button), how? Well you can use the ~background-image~ and move the image (with ~background-position~) to only show the style of interest and move it whenever the state changes to show another style
  - To overly text on a background image, the image must be a low constrast image in order for the text to be legible, otherwise you'll need to add a semi-transparent background color (or "screen") behind the text to imporve legibility
  - You can also add gradients using CSS, there are different types of gradients and you can have the gradient at an angle, vertically, or horizontally
